First Spring MVC Example
	1.Create Controller Class (HomeController.java)
	2.Define Controller method inside controller class
	3.Add Request Mapping to Controller Method
	4.Return View Name
	5.Develop View page (main-menu.jsp)
	
Reading HTML Form Data
	1.Check HelloWorldController.java
	2.check helloworld-form.jsp and helloworld.jsp

Adding Data to Spring Model
	Objective : We want to create a new method to process form data
				Read the form data : student's name
				Convert the name to upper case
				Add the upper case version to the model
				
	1.Check HelloWorldController > processFormVersionThree

Spring MVC Form Tags and Data Binding
	Form Tags will generate HTML for you
	Check Student,StudentController,student-form.jsp,student-confirmation.jsp
	Note: We create a Student Class and Student Controller Class
		  Inside Controller method /showForm we add a model attribute "student" which we pass
		  it to the student-form. In student-form when form is loaded it calls getter methods on
		  the model attribute we define in the form. when the form is submitted setter methods are
		  called. and finally student-confirmation form is called where we refere attribute name 
		  student to get appropriate data

Spring MVC Form Validation Rules
	Java Standard Bean Validation API is only a specification
	Hibernate implements the specification
	use Hiberante Validator 6.2 which is compatible with Hibernate Validator 7
	check Customer.java CustomerController customer-form.jsp customer-confirmation.jsp
	
Next: If we enter String value in the free passes (student-form.jsp) it will break
to fix this 1. create custom error message (src/message.properties)
			2. Load custom messages resource in Spring Config file(spring-mvc-demo-servlet.xml)
	
Spring MVC Custom Form Validation
This concept is Advance but it is very useful to create custom annotations
We could think of a use case where our custom code is more complex.
Instead of comparing the start of a string, we instead need to connection with 
a backend database or REST web service. So that is probably a much better use for custom validation.

Development Process
	1. Create Custom Validation Rule
		a.Create @CourseCode annotation
		b.Create CourseCodeConstraintValidator
	2. Add validation rule to Customer Class
	3. Display Error messages on HTML form
	4. Update Confirmation Page

